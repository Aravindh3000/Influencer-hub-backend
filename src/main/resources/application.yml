spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/influencer_db}
    username: ${SPRING_DATASOURCE_USERNAME:user}
    password: ${SPRING_DATASOURCE_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: ${SHOW_SQL:false}
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  liquibase:
    enabled: false
    change-log: classpath:db/changelog/db.change-log.yaml
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:default}

# Server configuration
server:
  port: 8080
  servlet:
    context-path: /

# Actuator configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  info:
    env:
      enabled: true

# Logging configuration
logging:
  level:
    com.influencermarket.backend: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: ${SHOW_SQL:false}
    org.hibernate.type.descriptor.sql.BasicBinder: ${SHOW_SQL:false}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Swagger/OpenAPI configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
    doc-expansion: none
  # Scan all packages under backend for controllers
  packages-to-scan: com.influencermarket.backend
  # Only include classes with @RestController annotation
  paths-to-match: /api/**

# Environment variables for OpenAPI
STAGE: ${STAGE:1.0.0}
BASE_URL: ${BASE_URL:http://localhost:8080}
